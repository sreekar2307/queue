// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: queue/v1/transport.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardType int32

const (
	ShardType_SHARD_TYPE_UNKNOWN    ShardType = 0
	ShardType_SHARD_TYPE_BROKERS    ShardType = 1
	ShardType_SHARD_TYPE_PARTITIONS ShardType = 2
)

// Enum value maps for ShardType.
var (
	ShardType_name = map[int32]string{
		0: "SHARD_TYPE_UNKNOWN",
		1: "SHARD_TYPE_BROKERS",
		2: "SHARD_TYPE_PARTITIONS",
	}
	ShardType_value = map[string]int32{
		"SHARD_TYPE_UNKNOWN":    0,
		"SHARD_TYPE_BROKERS":    1,
		"SHARD_TYPE_PARTITIONS": 2,
	}
)

func (x ShardType) Enum() *ShardType {
	p := new(ShardType)
	*p = x
	return p
}

func (x ShardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardType) Descriptor() protoreflect.EnumDescriptor {
	return file_queue_v1_transport_proto_enumTypes[0].Descriptor()
}

func (ShardType) Type() protoreflect.EnumType {
	return &file_queue_v1_transport_proto_enumTypes[0]
}

func (x ShardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardType.Descriptor instead.
func (ShardType) EnumDescriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{0}
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	PingAt        int64                  `protobuf:"varint,2,opt,name=ping_at,json=pingAt,proto3" json:"ping_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_queue_v1_transport_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *HealthCheckRequest) GetPingAt() int64 {
	if x != nil {
		return x.PingAt
	}
	return 0
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_queue_v1_transport_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AckMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	PartitionId   string                 `protobuf:"bytes,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	MessageId     []byte                 `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckMessageRequest) Reset() {
	*x = AckMessageRequest{}
	mi := &file_queue_v1_transport_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessageRequest) ProtoMessage() {}

func (x *AckMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessageRequest.ProtoReflect.Descriptor instead.
func (*AckMessageRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{2}
}

func (x *AckMessageRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *AckMessageRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *AckMessageRequest) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

type AckMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckMessageResponse) Reset() {
	*x = AckMessageResponse{}
	mi := &file_queue_v1_transport_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessageResponse) ProtoMessage() {}

func (x *AckMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessageResponse.ProtoReflect.Descriptor instead.
func (*AckMessageResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{3}
}

type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	PartitionKey  string                 `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_queue_v1_transport_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{4}
}

func (x *SendMessageRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SendMessageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendMessageRequest) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	MessageId     []byte                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	PartitionId   string                 `protobuf:"bytes,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	PartitionKey  string                 `protobuf:"bytes,4,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_queue_v1_transport_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{5}
}

func (x *SendMessageResponse) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SendMessageResponse) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *SendMessageResponse) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *SendMessageResponse) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *SendMessageResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReceiveMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveMessageRequest) Reset() {
	*x = ReceiveMessageRequest{}
	mi := &file_queue_v1_transport_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageRequest) ProtoMessage() {}

func (x *ReceiveMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMessageRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{6}
}

func (x *ReceiveMessageRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type ReceiveMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	MessageId     []byte                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	PartitionId   string                 `protobuf:"bytes,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	PartitionKey  string                 `protobuf:"bytes,4,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveMessageResponse) Reset() {
	*x = ReceiveMessageResponse{}
	mi := &file_queue_v1_transport_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageResponse) ProtoMessage() {}

func (x *ReceiveMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageResponse.ProtoReflect.Descriptor instead.
func (*ReceiveMessageResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiveMessageResponse) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ReceiveMessageResponse) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *ReceiveMessageResponse) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *ReceiveMessageResponse) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *ReceiveMessageResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReceiveMessageForPartitionIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	PartitionId   string                 `protobuf:"bytes,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveMessageForPartitionIDRequest) Reset() {
	*x = ReceiveMessageForPartitionIDRequest{}
	mi := &file_queue_v1_transport_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessageForPartitionIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageForPartitionIDRequest) ProtoMessage() {}

func (x *ReceiveMessageForPartitionIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageForPartitionIDRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMessageForPartitionIDRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{8}
}

func (x *ReceiveMessageForPartitionIDRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *ReceiveMessageForPartitionIDRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

type CreateTopicRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Topic              string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	NumberOfPartitions uint64                 `protobuf:"varint,2,opt,name=number_of_partitions,json=numberOfPartitions,proto3" json:"number_of_partitions,omitempty"`
	ReplicationFactor  uint64                 `protobuf:"varint,3,opt,name=replication_factor,json=replicationFactor,proto3" json:"replication_factor,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateTopicRequest) Reset() {
	*x = CreateTopicRequest{}
	mi := &file_queue_v1_transport_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicRequest) ProtoMessage() {}

func (x *CreateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicRequest.ProtoReflect.Descriptor instead.
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTopicRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CreateTopicRequest) GetNumberOfPartitions() uint64 {
	if x != nil {
		return x.NumberOfPartitions
	}
	return 0
}

func (x *CreateTopicRequest) GetReplicationFactor() uint64 {
	if x != nil {
		return x.ReplicationFactor
	}
	return 0
}

type CreateTopicResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Name               string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NumberOfPartitions uint64                 `protobuf:"varint,2,opt,name=number_of_partitions,json=numberOfPartitions,proto3" json:"number_of_partitions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateTopicResponse) Reset() {
	*x = CreateTopicResponse{}
	mi := &file_queue_v1_transport_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicResponse) ProtoMessage() {}

func (x *CreateTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicResponse.ProtoReflect.Descriptor instead.
func (*CreateTopicResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTopicResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTopicResponse) GetNumberOfPartitions() uint64 {
	if x != nil {
		return x.NumberOfPartitions
	}
	return 0
}

type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	ConsumerGroup string                 `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	Topics        []string               `protobuf:"bytes,3,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_queue_v1_transport_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *ConnectRequest) GetConsumerGroup() string {
	if x != nil {
		return x.ConsumerGroup
	}
	return ""
}

func (x *ConnectRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consumer      *Consumer              `protobuf:"bytes,1,opt,name=consumer,proto3" json:"consumer,omitempty"`
	ConsumerGroup *ConsumerGroup         `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_queue_v1_transport_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{12}
}

func (x *ConnectResponse) GetConsumer() *Consumer {
	if x != nil {
		return x.Consumer
	}
	return nil
}

func (x *ConnectResponse) GetConsumerGroup() *ConsumerGroup {
	if x != nil {
		return x.ConsumerGroup
	}
	return nil
}

type Consumer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConsumerGroup string                 `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	Partitions    []string               `protobuf:"bytes,3,rep,name=partitions,proto3" json:"partitions,omitempty"`
	IsActive      bool                   `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Topics        []string               `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Consumer) Reset() {
	*x = Consumer{}
	mi := &file_queue_v1_transport_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Consumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consumer) ProtoMessage() {}

func (x *Consumer) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consumer.ProtoReflect.Descriptor instead.
func (*Consumer) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{13}
}

func (x *Consumer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Consumer) GetConsumerGroup() string {
	if x != nil {
		return x.ConsumerGroup
	}
	return ""
}

func (x *Consumer) GetPartitions() []string {
	if x != nil {
		return x.Partitions
	}
	return nil
}

func (x *Consumer) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Consumer) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ConsumerGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Consumers     []string               `protobuf:"bytes,2,rep,name=consumers,proto3" json:"consumers,omitempty"`
	Topics        []string               `protobuf:"bytes,3,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerGroup) Reset() {
	*x = ConsumerGroup{}
	mi := &file_queue_v1_transport_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroup) ProtoMessage() {}

func (x *ConsumerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerGroup.ProtoReflect.Descriptor instead.
func (*ConsumerGroup) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{14}
}

func (x *ConsumerGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConsumerGroup) GetConsumers() []string {
	if x != nil {
		return x.Consumers
	}
	return nil
}

func (x *ConsumerGroup) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ShardInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topics        []string               `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardInfoRequest) Reset() {
	*x = ShardInfoRequest{}
	mi := &file_queue_v1_transport_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfoRequest) ProtoMessage() {}

func (x *ShardInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfoRequest.ProtoReflect.Descriptor instead.
func (*ShardInfoRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{15}
}

func (x *ShardInfoRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ShardInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardInfo     map[string]*ShardInfo  `protobuf:"bytes,1,rep,name=shard_info,json=shardInfo,proto3" json:"shard_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Brokers       []*Broker              `protobuf:"bytes,2,rep,name=brokers,proto3" json:"brokers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardInfoResponse) Reset() {
	*x = ShardInfoResponse{}
	mi := &file_queue_v1_transport_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfoResponse) ProtoMessage() {}

func (x *ShardInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfoResponse.ProtoReflect.Descriptor instead.
func (*ShardInfoResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{16}
}

func (x *ShardInfoResponse) GetShardInfo() map[string]*ShardInfo {
	if x != nil {
		return x.ShardInfo
	}
	return nil
}

func (x *ShardInfoResponse) GetBrokers() []*Broker {
	if x != nil {
		return x.Brokers
	}
	return nil
}

type ShardInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardType     ShardType              `protobuf:"varint,1,opt,name=shard_type,json=shardType,proto3,enum=transportpb.ShardType" json:"shard_type,omitempty"`
	ShardId       uint64                 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Topic         string                 `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	PartitionId   string                 `protobuf:"bytes,4,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	Brokers       []*Broker              `protobuf:"bytes,5,rep,name=brokers,proto3" json:"brokers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardInfo) Reset() {
	*x = ShardInfo{}
	mi := &file_queue_v1_transport_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfo) ProtoMessage() {}

func (x *ShardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfo.ProtoReflect.Descriptor instead.
func (*ShardInfo) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{17}
}

func (x *ShardInfo) GetShardType() ShardType {
	if x != nil {
		return x.ShardType
	}
	return ShardType_SHARD_TYPE_UNKNOWN
}

func (x *ShardInfo) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ShardInfo) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *ShardInfo) GetBrokers() []*Broker {
	if x != nil {
		return x.Brokers
	}
	return nil
}

type Broker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RaftAddress   string                 `protobuf:"bytes,2,opt,name=raft_address,json=raftAddress,proto3" json:"raft_address,omitempty"`
	GrpcAddress   string                 `protobuf:"bytes,3,opt,name=grpc_address,json=grpcAddress,proto3" json:"grpc_address,omitempty"`
	HttpAddress   string                 `protobuf:"bytes,4,opt,name=http_address,json=httpAddress,proto3" json:"http_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Broker) Reset() {
	*x = Broker{}
	mi := &file_queue_v1_transport_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Broker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broker) ProtoMessage() {}

func (x *Broker) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_transport_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broker.ProtoReflect.Descriptor instead.
func (*Broker) Descriptor() ([]byte, []int) {
	return file_queue_v1_transport_proto_rawDescGZIP(), []int{18}
}

func (x *Broker) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Broker) GetRaftAddress() string {
	if x != nil {
		return x.RaftAddress
	}
	return ""
}

func (x *Broker) GetGrpcAddress() string {
	if x != nil {
		return x.GrpcAddress
	}
	return ""
}

func (x *Broker) GetHttpAddress() string {
	if x != nil {
		return x.HttpAddress
	}
	return ""
}

var File_queue_v1_transport_proto protoreflect.FileDescriptor

const file_queue_v1_transport_proto_rawDesc = "" +
	"\n" +
	"\x18queue/v1/transport.proto\x12\vtransportpb\x1a\x1bbuf/validate/validate.proto\"Y\n" +
	"\x12HealthCheckRequest\x12*\n" +
	"\vconsumer_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\n" +
	"consumerId\x12\x17\n" +
	"\aping_at\x18\x02 \x01(\x03R\x06pingAt\"/\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"v\n" +
	"\x11AckMessageRequest\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12!\n" +
	"\fpartition_id\x18\x02 \x01(\tR\vpartitionId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\fR\tmessageId\"\x14\n" +
	"\x12AckMessageResponse\"c\n" +
	"\x12SendMessageRequest\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12#\n" +
	"\rpartition_key\x18\x03 \x01(\tR\fpartitionKey\"\xa6\x01\n" +
	"\x13SendMessageResponse\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\fR\tmessageId\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\tR\vpartitionId\x12#\n" +
	"\rpartition_key\x18\x04 \x01(\tR\fpartitionKey\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\"8\n" +
	"\x15ReceiveMessageRequest\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\"\xa9\x01\n" +
	"\x16ReceiveMessageResponse\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\fR\tmessageId\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\tR\vpartitionId\x12#\n" +
	"\rpartition_key\x18\x04 \x01(\tR\fpartitionKey\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\"i\n" +
	"#ReceiveMessageForPartitionIDRequest\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12!\n" +
	"\fpartition_id\x18\x02 \x01(\tR\vpartitionId\"\xac\x01\n" +
	"\x12CreateTopicRequest\x12\x1f\n" +
	"\x05topic\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\x05topic\x12;\n" +
	"\x14number_of_partitions\x18\x02 \x01(\x04B\t\xbaH\x062\x04\x18\n" +
	" \x00R\x12numberOfPartitions\x128\n" +
	"\x12replication_factor\x18\x03 \x01(\x04B\t\xbaH\x062\x04\x18\n" +
	" \x00R\x11replicationFactor\"[\n" +
	"\x13CreateTopicResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x14number_of_partitions\x18\x02 \x01(\x04R\x12numberOfPartitions\"p\n" +
	"\x0eConnectRequest\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12%\n" +
	"\x0econsumer_group\x18\x02 \x01(\tR\rconsumerGroup\x12\x16\n" +
	"\x06topics\x18\x03 \x03(\tR\x06topics\"\x87\x01\n" +
	"\x0fConnectResponse\x121\n" +
	"\bconsumer\x18\x01 \x01(\v2\x15.transportpb.ConsumerR\bconsumer\x12A\n" +
	"\x0econsumer_group\x18\x02 \x01(\v2\x1a.transportpb.ConsumerGroupR\rconsumerGroup\"\x96\x01\n" +
	"\bConsumer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0econsumer_group\x18\x02 \x01(\tR\rconsumerGroup\x12\x1e\n" +
	"\n" +
	"partitions\x18\x03 \x03(\tR\n" +
	"partitions\x12\x1b\n" +
	"\tis_active\x18\x04 \x01(\bR\bisActive\x12\x16\n" +
	"\x06topics\x18\x05 \x03(\tR\x06topics\"U\n" +
	"\rConsumerGroup\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tconsumers\x18\x02 \x03(\tR\tconsumers\x12\x16\n" +
	"\x06topics\x18\x03 \x03(\tR\x06topics\"*\n" +
	"\x10ShardInfoRequest\x12\x16\n" +
	"\x06topics\x18\x01 \x03(\tR\x06topics\"\xe6\x01\n" +
	"\x11ShardInfoResponse\x12L\n" +
	"\n" +
	"shard_info\x18\x01 \x03(\v2-.transportpb.ShardInfoResponse.ShardInfoEntryR\tshardInfo\x12-\n" +
	"\abrokers\x18\x02 \x03(\v2\x13.transportpb.BrokerR\abrokers\x1aT\n" +
	"\x0eShardInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.transportpb.ShardInfoR\x05value:\x028\x01\"\xc5\x01\n" +
	"\tShardInfo\x125\n" +
	"\n" +
	"shard_type\x18\x01 \x01(\x0e2\x16.transportpb.ShardTypeR\tshardType\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x04R\ashardId\x12\x14\n" +
	"\x05topic\x18\x03 \x01(\tR\x05topic\x12!\n" +
	"\fpartition_id\x18\x04 \x01(\tR\vpartitionId\x12-\n" +
	"\abrokers\x18\x05 \x03(\v2\x13.transportpb.BrokerR\abrokers\"\x81\x01\n" +
	"\x06Broker\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12!\n" +
	"\fraft_address\x18\x02 \x01(\tR\vraftAddress\x12!\n" +
	"\fgrpc_address\x18\x03 \x01(\tR\vgrpcAddress\x12!\n" +
	"\fhttp_address\x18\x04 \x01(\tR\vhttpAddress*V\n" +
	"\tShardType\x12\x16\n" +
	"\x12SHARD_TYPE_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12SHARD_TYPE_BROKERS\x10\x01\x12\x19\n" +
	"\x15SHARD_TYPE_PARTITIONS\x10\x022\xb8\x05\n" +
	"\tTransport\x12T\n" +
	"\vHealthCheck\x12\x1f.transportpb.HealthCheckRequest\x1a .transportpb.HealthCheckResponse(\x010\x01\x12M\n" +
	"\n" +
	"AckMessage\x12\x1e.transportpb.AckMessageRequest\x1a\x1f.transportpb.AckMessageResponse\x12P\n" +
	"\vSendMessage\x12\x1f.transportpb.SendMessageRequest\x1a .transportpb.SendMessageResponse\x12Y\n" +
	"\x0eReceiveMessage\x12\".transportpb.ReceiveMessageRequest\x1a#.transportpb.ReceiveMessageResponse\x12u\n" +
	"\x1cReceiveMessageForPartitionID\x120.transportpb.ReceiveMessageForPartitionIDRequest\x1a#.transportpb.ReceiveMessageResponse\x12P\n" +
	"\vCreateTopic\x12\x1f.transportpb.CreateTopicRequest\x1a .transportpb.CreateTopicResponse\x12D\n" +
	"\aConnect\x12\x1b.transportpb.ConnectRequest\x1a\x1c.transportpb.ConnectResponse\x12J\n" +
	"\tShardInfo\x12\x1d.transportpb.ShardInfoRequest\x1a\x1e.transportpb.ShardInfoResponseB\x98\x01\n" +
	"\x0fcom.transportpbB\x0eTransportProtoP\x01Z)github.com/sreekar2307/queue/gen/queue/v1\xa2\x02\x03TXX\xaa\x02\vTransportpb\xca\x02\vTransportpb\xe2\x02\x17Transportpb\\GPBMetadata\xea\x02\vTransportpbb\x06proto3"

var (
	file_queue_v1_transport_proto_rawDescOnce sync.Once
	file_queue_v1_transport_proto_rawDescData []byte
)

func file_queue_v1_transport_proto_rawDescGZIP() []byte {
	file_queue_v1_transport_proto_rawDescOnce.Do(func() {
		file_queue_v1_transport_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_queue_v1_transport_proto_rawDesc), len(file_queue_v1_transport_proto_rawDesc)))
	})
	return file_queue_v1_transport_proto_rawDescData
}

var file_queue_v1_transport_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_queue_v1_transport_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_queue_v1_transport_proto_goTypes = []any{
	(ShardType)(0),                              // 0: transportpb.ShardType
	(*HealthCheckRequest)(nil),                  // 1: transportpb.HealthCheckRequest
	(*HealthCheckResponse)(nil),                 // 2: transportpb.HealthCheckResponse
	(*AckMessageRequest)(nil),                   // 3: transportpb.AckMessageRequest
	(*AckMessageResponse)(nil),                  // 4: transportpb.AckMessageResponse
	(*SendMessageRequest)(nil),                  // 5: transportpb.SendMessageRequest
	(*SendMessageResponse)(nil),                 // 6: transportpb.SendMessageResponse
	(*ReceiveMessageRequest)(nil),               // 7: transportpb.ReceiveMessageRequest
	(*ReceiveMessageResponse)(nil),              // 8: transportpb.ReceiveMessageResponse
	(*ReceiveMessageForPartitionIDRequest)(nil), // 9: transportpb.ReceiveMessageForPartitionIDRequest
	(*CreateTopicRequest)(nil),                  // 10: transportpb.CreateTopicRequest
	(*CreateTopicResponse)(nil),                 // 11: transportpb.CreateTopicResponse
	(*ConnectRequest)(nil),                      // 12: transportpb.ConnectRequest
	(*ConnectResponse)(nil),                     // 13: transportpb.ConnectResponse
	(*Consumer)(nil),                            // 14: transportpb.Consumer
	(*ConsumerGroup)(nil),                       // 15: transportpb.ConsumerGroup
	(*ShardInfoRequest)(nil),                    // 16: transportpb.ShardInfoRequest
	(*ShardInfoResponse)(nil),                   // 17: transportpb.ShardInfoResponse
	(*ShardInfo)(nil),                           // 18: transportpb.ShardInfo
	(*Broker)(nil),                              // 19: transportpb.Broker
	nil,                                         // 20: transportpb.ShardInfoResponse.ShardInfoEntry
}
var file_queue_v1_transport_proto_depIdxs = []int32{
	14, // 0: transportpb.ConnectResponse.consumer:type_name -> transportpb.Consumer
	15, // 1: transportpb.ConnectResponse.consumer_group:type_name -> transportpb.ConsumerGroup
	20, // 2: transportpb.ShardInfoResponse.shard_info:type_name -> transportpb.ShardInfoResponse.ShardInfoEntry
	19, // 3: transportpb.ShardInfoResponse.brokers:type_name -> transportpb.Broker
	0,  // 4: transportpb.ShardInfo.shard_type:type_name -> transportpb.ShardType
	19, // 5: transportpb.ShardInfo.brokers:type_name -> transportpb.Broker
	18, // 6: transportpb.ShardInfoResponse.ShardInfoEntry.value:type_name -> transportpb.ShardInfo
	1,  // 7: transportpb.Transport.HealthCheck:input_type -> transportpb.HealthCheckRequest
	3,  // 8: transportpb.Transport.AckMessage:input_type -> transportpb.AckMessageRequest
	5,  // 9: transportpb.Transport.SendMessage:input_type -> transportpb.SendMessageRequest
	7,  // 10: transportpb.Transport.ReceiveMessage:input_type -> transportpb.ReceiveMessageRequest
	9,  // 11: transportpb.Transport.ReceiveMessageForPartitionID:input_type -> transportpb.ReceiveMessageForPartitionIDRequest
	10, // 12: transportpb.Transport.CreateTopic:input_type -> transportpb.CreateTopicRequest
	12, // 13: transportpb.Transport.Connect:input_type -> transportpb.ConnectRequest
	16, // 14: transportpb.Transport.ShardInfo:input_type -> transportpb.ShardInfoRequest
	2,  // 15: transportpb.Transport.HealthCheck:output_type -> transportpb.HealthCheckResponse
	4,  // 16: transportpb.Transport.AckMessage:output_type -> transportpb.AckMessageResponse
	6,  // 17: transportpb.Transport.SendMessage:output_type -> transportpb.SendMessageResponse
	8,  // 18: transportpb.Transport.ReceiveMessage:output_type -> transportpb.ReceiveMessageResponse
	8,  // 19: transportpb.Transport.ReceiveMessageForPartitionID:output_type -> transportpb.ReceiveMessageResponse
	11, // 20: transportpb.Transport.CreateTopic:output_type -> transportpb.CreateTopicResponse
	13, // 21: transportpb.Transport.Connect:output_type -> transportpb.ConnectResponse
	17, // 22: transportpb.Transport.ShardInfo:output_type -> transportpb.ShardInfoResponse
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_queue_v1_transport_proto_init() }
func file_queue_v1_transport_proto_init() {
	if File_queue_v1_transport_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_queue_v1_transport_proto_rawDesc), len(file_queue_v1_transport_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_queue_v1_transport_proto_goTypes,
		DependencyIndexes: file_queue_v1_transport_proto_depIdxs,
		EnumInfos:         file_queue_v1_transport_proto_enumTypes,
		MessageInfos:      file_queue_v1_transport_proto_msgTypes,
	}.Build()
	File_queue_v1_transport_proto = out.File
	file_queue_v1_transport_proto_goTypes = nil
	file_queue_v1_transport_proto_depIdxs = nil
}
