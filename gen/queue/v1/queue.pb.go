// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: queue/v1/queue.proto

package queuev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardType int32

const (
	ShardType_SHARD_TYPE_UNSPECIFIED ShardType = 0
	ShardType_SHARD_TYPE_BROKERS     ShardType = 1
	ShardType_SHARD_TYPE_PARTITIONS  ShardType = 2
)

// Enum value maps for ShardType.
var (
	ShardType_name = map[int32]string{
		0: "SHARD_TYPE_UNSPECIFIED",
		1: "SHARD_TYPE_BROKERS",
		2: "SHARD_TYPE_PARTITIONS",
	}
	ShardType_value = map[string]int32{
		"SHARD_TYPE_UNSPECIFIED": 0,
		"SHARD_TYPE_BROKERS":     1,
		"SHARD_TYPE_PARTITIONS":  2,
	}
)

func (x ShardType) Enum() *ShardType {
	p := new(ShardType)
	*p = x
	return p
}

func (x ShardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardType) Descriptor() protoreflect.EnumDescriptor {
	return file_queue_v1_queue_proto_enumTypes[0].Descriptor()
}

func (ShardType) Type() protoreflect.EnumType {
	return &file_queue_v1_queue_proto_enumTypes[0]
}

func (x ShardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardType.Descriptor instead.
func (ShardType) EnumDescriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{0}
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	PingAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=ping_at,json=pingAt,proto3" json:"ping_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_queue_v1_queue_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *HealthCheckRequest) GetPingAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PingAt
	}
	return nil
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_queue_v1_queue_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AckMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	PartitionId   string                 `protobuf:"bytes,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	MessageId     []byte                 `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckMessageRequest) Reset() {
	*x = AckMessageRequest{}
	mi := &file_queue_v1_queue_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessageRequest) ProtoMessage() {}

func (x *AckMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessageRequest.ProtoReflect.Descriptor instead.
func (*AckMessageRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{2}
}

func (x *AckMessageRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *AckMessageRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *AckMessageRequest) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

type AckMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckMessageResponse) Reset() {
	*x = AckMessageResponse{}
	mi := &file_queue_v1_queue_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessageResponse) ProtoMessage() {}

func (x *AckMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessageResponse.ProtoReflect.Descriptor instead.
func (*AckMessageResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{3}
}

type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	PartitionKey  string                 `protobuf:"bytes,3,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_queue_v1_queue_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{4}
}

func (x *SendMessageRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SendMessageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SendMessageRequest) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	MessageId     []byte                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	PartitionId   string                 `protobuf:"bytes,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	PartitionKey  string                 `protobuf:"bytes,4,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_queue_v1_queue_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{5}
}

func (x *SendMessageResponse) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SendMessageResponse) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *SendMessageResponse) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *SendMessageResponse) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *SendMessageResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReceiveMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveMessageRequest) Reset() {
	*x = ReceiveMessageRequest{}
	mi := &file_queue_v1_queue_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageRequest) ProtoMessage() {}

func (x *ReceiveMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMessageRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{6}
}

func (x *ReceiveMessageRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type ReceiveMessageForPartitionIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	MessageId     []byte                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	PartitionId   string                 `protobuf:"bytes,3,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	PartitionKey  string                 `protobuf:"bytes,4,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	Data          []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveMessageForPartitionIDResponse) Reset() {
	*x = ReceiveMessageForPartitionIDResponse{}
	mi := &file_queue_v1_queue_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessageForPartitionIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageForPartitionIDResponse) ProtoMessage() {}

func (x *ReceiveMessageForPartitionIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageForPartitionIDResponse.ProtoReflect.Descriptor instead.
func (*ReceiveMessageForPartitionIDResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiveMessageForPartitionIDResponse) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ReceiveMessageForPartitionIDResponse) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *ReceiveMessageForPartitionIDResponse) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *ReceiveMessageForPartitionIDResponse) GetPartitionKey() string {
	if x != nil {
		return x.PartitionKey
	}
	return ""
}

func (x *ReceiveMessageForPartitionIDResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReceiveMessageForPartitionIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	PartitionId   string                 `protobuf:"bytes,2,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveMessageForPartitionIDRequest) Reset() {
	*x = ReceiveMessageForPartitionIDRequest{}
	mi := &file_queue_v1_queue_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessageForPartitionIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessageForPartitionIDRequest) ProtoMessage() {}

func (x *ReceiveMessageForPartitionIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessageForPartitionIDRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMessageForPartitionIDRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{8}
}

func (x *ReceiveMessageForPartitionIDRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *ReceiveMessageForPartitionIDRequest) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

type CreateTopicRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Topic              string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	NumberOfPartitions uint64                 `protobuf:"varint,2,opt,name=number_of_partitions,json=numberOfPartitions,proto3" json:"number_of_partitions,omitempty"`
	ReplicationFactor  uint64                 `protobuf:"varint,3,opt,name=replication_factor,json=replicationFactor,proto3" json:"replication_factor,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateTopicRequest) Reset() {
	*x = CreateTopicRequest{}
	mi := &file_queue_v1_queue_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicRequest) ProtoMessage() {}

func (x *CreateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicRequest.ProtoReflect.Descriptor instead.
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTopicRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CreateTopicRequest) GetNumberOfPartitions() uint64 {
	if x != nil {
		return x.NumberOfPartitions
	}
	return 0
}

func (x *CreateTopicRequest) GetReplicationFactor() uint64 {
	if x != nil {
		return x.ReplicationFactor
	}
	return 0
}

type CreateTopicResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Name               string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NumberOfPartitions uint64                 `protobuf:"varint,2,opt,name=number_of_partitions,json=numberOfPartitions,proto3" json:"number_of_partitions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateTopicResponse) Reset() {
	*x = CreateTopicResponse{}
	mi := &file_queue_v1_queue_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicResponse) ProtoMessage() {}

func (x *CreateTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicResponse.ProtoReflect.Descriptor instead.
func (*CreateTopicResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTopicResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTopicResponse) GetNumberOfPartitions() uint64 {
	if x != nil {
		return x.NumberOfPartitions
	}
	return 0
}

type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	ConsumerGroup string                 `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	Topics        []string               `protobuf:"bytes,3,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_queue_v1_queue_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *ConnectRequest) GetConsumerGroup() string {
	if x != nil {
		return x.ConsumerGroup
	}
	return ""
}

func (x *ConnectRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consumer      *Consumer              `protobuf:"bytes,1,opt,name=consumer,proto3" json:"consumer,omitempty"`
	ConsumerGroup *ConsumerGroup         `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_queue_v1_queue_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{12}
}

func (x *ConnectResponse) GetConsumer() *Consumer {
	if x != nil {
		return x.Consumer
	}
	return nil
}

func (x *ConnectResponse) GetConsumerGroup() *ConsumerGroup {
	if x != nil {
		return x.ConsumerGroup
	}
	return nil
}

type Consumer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConsumerGroup string                 `protobuf:"bytes,2,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty"`
	Partitions    []string               `protobuf:"bytes,3,rep,name=partitions,proto3" json:"partitions,omitempty"`
	IsActive      bool                   `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Topics        []string               `protobuf:"bytes,5,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Consumer) Reset() {
	*x = Consumer{}
	mi := &file_queue_v1_queue_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Consumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consumer) ProtoMessage() {}

func (x *Consumer) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consumer.ProtoReflect.Descriptor instead.
func (*Consumer) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{13}
}

func (x *Consumer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Consumer) GetConsumerGroup() string {
	if x != nil {
		return x.ConsumerGroup
	}
	return ""
}

func (x *Consumer) GetPartitions() []string {
	if x != nil {
		return x.Partitions
	}
	return nil
}

func (x *Consumer) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Consumer) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ConsumerGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Consumers     []string               `protobuf:"bytes,2,rep,name=consumers,proto3" json:"consumers,omitempty"`
	Topics        []string               `protobuf:"bytes,3,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerGroup) Reset() {
	*x = ConsumerGroup{}
	mi := &file_queue_v1_queue_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerGroup) ProtoMessage() {}

func (x *ConsumerGroup) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerGroup.ProtoReflect.Descriptor instead.
func (*ConsumerGroup) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{14}
}

func (x *ConsumerGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConsumerGroup) GetConsumers() []string {
	if x != nil {
		return x.Consumers
	}
	return nil
}

func (x *ConsumerGroup) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ShardInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topics        []string               `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardInfoRequest) Reset() {
	*x = ShardInfoRequest{}
	mi := &file_queue_v1_queue_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfoRequest) ProtoMessage() {}

func (x *ShardInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfoRequest.ProtoReflect.Descriptor instead.
func (*ShardInfoRequest) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{15}
}

func (x *ShardInfoRequest) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ShardInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardInfo     map[string]*ShardInfo  `protobuf:"bytes,1,rep,name=shard_info,json=shardInfo,proto3" json:"shard_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Brokers       []*Broker              `protobuf:"bytes,2,rep,name=brokers,proto3" json:"brokers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardInfoResponse) Reset() {
	*x = ShardInfoResponse{}
	mi := &file_queue_v1_queue_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfoResponse) ProtoMessage() {}

func (x *ShardInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfoResponse.ProtoReflect.Descriptor instead.
func (*ShardInfoResponse) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{16}
}

func (x *ShardInfoResponse) GetShardInfo() map[string]*ShardInfo {
	if x != nil {
		return x.ShardInfo
	}
	return nil
}

func (x *ShardInfoResponse) GetBrokers() []*Broker {
	if x != nil {
		return x.Brokers
	}
	return nil
}

type ShardInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardType     ShardType              `protobuf:"varint,1,opt,name=shard_type,json=shardType,proto3,enum=queue.v1.ShardType" json:"shard_type,omitempty"`
	ShardId       uint64                 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Topic         string                 `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	PartitionId   string                 `protobuf:"bytes,4,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	Brokers       []*Broker              `protobuf:"bytes,5,rep,name=brokers,proto3" json:"brokers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardInfo) Reset() {
	*x = ShardInfo{}
	mi := &file_queue_v1_queue_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfo) ProtoMessage() {}

func (x *ShardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfo.ProtoReflect.Descriptor instead.
func (*ShardInfo) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{17}
}

func (x *ShardInfo) GetShardType() ShardType {
	if x != nil {
		return x.ShardType
	}
	return ShardType_SHARD_TYPE_UNSPECIFIED
}

func (x *ShardInfo) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *ShardInfo) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

func (x *ShardInfo) GetBrokers() []*Broker {
	if x != nil {
		return x.Brokers
	}
	return nil
}

type Broker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RaftAddress   string                 `protobuf:"bytes,2,opt,name=raft_address,json=raftAddress,proto3" json:"raft_address,omitempty"`
	GrpcAddress   string                 `protobuf:"bytes,3,opt,name=grpc_address,json=grpcAddress,proto3" json:"grpc_address,omitempty"`
	HttpAddress   string                 `protobuf:"bytes,4,opt,name=http_address,json=httpAddress,proto3" json:"http_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Broker) Reset() {
	*x = Broker{}
	mi := &file_queue_v1_queue_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Broker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broker) ProtoMessage() {}

func (x *Broker) ProtoReflect() protoreflect.Message {
	mi := &file_queue_v1_queue_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broker.ProtoReflect.Descriptor instead.
func (*Broker) Descriptor() ([]byte, []int) {
	return file_queue_v1_queue_proto_rawDescGZIP(), []int{18}
}

func (x *Broker) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Broker) GetRaftAddress() string {
	if x != nil {
		return x.RaftAddress
	}
	return ""
}

func (x *Broker) GetGrpcAddress() string {
	if x != nil {
		return x.GrpcAddress
	}
	return ""
}

func (x *Broker) GetHttpAddress() string {
	if x != nil {
		return x.HttpAddress
	}
	return ""
}

var File_queue_v1_queue_proto protoreflect.FileDescriptor

const file_queue_v1_queue_proto_rawDesc = "" +
	"\n" +
	"\x14queue/v1/queue.proto\x12\bqueue.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xda\x01\n" +
	"\x12HealthCheckRequest\x12*\n" +
	"\vconsumer_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\n" +
	"consumerId\x12\x97\x01\n" +
	"\aping_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampBb\xbaH_\xba\x01\\\n" +
	"\"ping_at.less_than_and_equal_to_now\x12)Ping at must be less than or equal to now\x1a\vthis <= nowR\x06pingAt\"/\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x81\x01\n" +
	"\x11AckMessageRequest\x12*\n" +
	"\vconsumer_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\n" +
	"consumerId\x12!\n" +
	"\fpartition_id\x18\x02 \x01(\tR\vpartitionId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\fR\tmessageId\"\x14\n" +
	"\x12AckMessageResponse\"y\n" +
	"\x12SendMessageRequest\x12\x1f\n" +
	"\x05topic\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\x05topic\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12.\n" +
	"\rpartition_key\x18\x03 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\fpartitionKey\"\xa6\x01\n" +
	"\x13SendMessageResponse\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\fR\tmessageId\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\tR\vpartitionId\x12#\n" +
	"\rpartition_key\x18\x04 \x01(\tR\fpartitionKey\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\"C\n" +
	"\x15ReceiveMessageRequest\x12*\n" +
	"\vconsumer_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\n" +
	"consumerId\"\xb7\x01\n" +
	"$ReceiveMessageForPartitionIDResponse\x12\x14\n" +
	"\x05topic\x18\x01 \x01(\tR\x05topic\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\fR\tmessageId\x12!\n" +
	"\fpartition_id\x18\x03 \x01(\tR\vpartitionId\x12#\n" +
	"\rpartition_key\x18\x04 \x01(\tR\fpartitionKey\x12\x12\n" +
	"\x04data\x18\x05 \x01(\fR\x04data\"i\n" +
	"#ReceiveMessageForPartitionIDRequest\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12!\n" +
	"\fpartition_id\x18\x02 \x01(\tR\vpartitionId\"\xac\x01\n" +
	"\x12CreateTopicRequest\x12\x1f\n" +
	"\x05topic\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\x05topic\x12;\n" +
	"\x14number_of_partitions\x18\x02 \x01(\x04B\t\xbaH\x062\x04\x18\n" +
	" \x00R\x12numberOfPartitions\x128\n" +
	"\x12replication_factor\x18\x03 \x01(\x04B\t\xbaH\x062\x04\x18\n" +
	" \x00R\x11replicationFactor\"[\n" +
	"\x13CreateTopicResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x120\n" +
	"\x14number_of_partitions\x18\x02 \x01(\x04R\x12numberOfPartitions\"\x86\x01\n" +
	"\x0eConnectRequest\x12*\n" +
	"\vconsumer_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\n" +
	"consumerId\x120\n" +
	"\x0econsumer_group\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\rconsumerGroup\x12\x16\n" +
	"\x06topics\x18\x03 \x03(\tR\x06topics\"\x81\x01\n" +
	"\x0fConnectResponse\x12.\n" +
	"\bconsumer\x18\x01 \x01(\v2\x12.queue.v1.ConsumerR\bconsumer\x12>\n" +
	"\x0econsumer_group\x18\x02 \x01(\v2\x17.queue.v1.ConsumerGroupR\rconsumerGroup\"\x96\x01\n" +
	"\bConsumer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0econsumer_group\x18\x02 \x01(\tR\rconsumerGroup\x12\x1e\n" +
	"\n" +
	"partitions\x18\x03 \x03(\tR\n" +
	"partitions\x12\x1b\n" +
	"\tis_active\x18\x04 \x01(\bR\bisActive\x12\x16\n" +
	"\x06topics\x18\x05 \x03(\tR\x06topics\"U\n" +
	"\rConsumerGroup\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tconsumers\x18\x02 \x03(\tR\tconsumers\x12\x16\n" +
	"\x06topics\x18\x03 \x03(\tR\x06topics\"*\n" +
	"\x10ShardInfoRequest\x12\x16\n" +
	"\x06topics\x18\x01 \x03(\tR\x06topics\"\xdd\x01\n" +
	"\x11ShardInfoResponse\x12I\n" +
	"\n" +
	"shard_info\x18\x01 \x03(\v2*.queue.v1.ShardInfoResponse.ShardInfoEntryR\tshardInfo\x12*\n" +
	"\abrokers\x18\x02 \x03(\v2\x10.queue.v1.BrokerR\abrokers\x1aQ\n" +
	"\x0eShardInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.queue.v1.ShardInfoR\x05value:\x028\x01\"\xbf\x01\n" +
	"\tShardInfo\x122\n" +
	"\n" +
	"shard_type\x18\x01 \x01(\x0e2\x13.queue.v1.ShardTypeR\tshardType\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x04R\ashardId\x12\x14\n" +
	"\x05topic\x18\x03 \x01(\tR\x05topic\x12!\n" +
	"\fpartition_id\x18\x04 \x01(\tR\vpartitionId\x12*\n" +
	"\abrokers\x18\x05 \x03(\v2\x10.queue.v1.BrokerR\abrokers\"\x81\x01\n" +
	"\x06Broker\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12!\n" +
	"\fraft_address\x18\x02 \x01(\tR\vraftAddress\x12!\n" +
	"\fgrpc_address\x18\x03 \x01(\tR\vgrpcAddress\x12!\n" +
	"\fhttp_address\x18\x04 \x01(\tR\vhttpAddress*Z\n" +
	"\tShardType\x12\x1a\n" +
	"\x16SHARD_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12SHARD_TYPE_BROKERS\x10\x01\x12\x19\n" +
	"\x15SHARD_TYPE_PARTITIONS\x10\x022\xc4\x04\n" +
	"\fQueueService\x12N\n" +
	"\vHealthCheck\x12\x1c.queue.v1.HealthCheckRequest\x1a\x1d.queue.v1.HealthCheckResponse(\x010\x01\x12G\n" +
	"\n" +
	"AckMessage\x12\x1b.queue.v1.AckMessageRequest\x1a\x1c.queue.v1.AckMessageResponse\x12J\n" +
	"\vSendMessage\x12\x1c.queue.v1.SendMessageRequest\x1a\x1d.queue.v1.SendMessageResponse\x12}\n" +
	"\x1cReceiveMessageForPartitionID\x12-.queue.v1.ReceiveMessageForPartitionIDRequest\x1a..queue.v1.ReceiveMessageForPartitionIDResponse\x12J\n" +
	"\vCreateTopic\x12\x1c.queue.v1.CreateTopicRequest\x1a\x1d.queue.v1.CreateTopicResponse\x12>\n" +
	"\aConnect\x12\x18.queue.v1.ConnectRequest\x1a\x19.queue.v1.ConnectResponse\x12D\n" +
	"\tShardInfo\x12\x1a.queue.v1.ShardInfoRequest\x1a\x1b.queue.v1.ShardInfoResponseB\x8e\x01\n" +
	"\fcom.queue.v1B\n" +
	"QueueProtoP\x01Z1github.com/sreekar2307/queue/gen/queue/v1;queuev1\xa2\x02\x03QXX\xaa\x02\bQueue.V1\xca\x02\bQueue\\V1\xe2\x02\x14Queue\\V1\\GPBMetadata\xea\x02\tQueue::V1b\x06proto3"

var (
	file_queue_v1_queue_proto_rawDescOnce sync.Once
	file_queue_v1_queue_proto_rawDescData []byte
)

func file_queue_v1_queue_proto_rawDescGZIP() []byte {
	file_queue_v1_queue_proto_rawDescOnce.Do(func() {
		file_queue_v1_queue_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_queue_v1_queue_proto_rawDesc), len(file_queue_v1_queue_proto_rawDesc)))
	})
	return file_queue_v1_queue_proto_rawDescData
}

var file_queue_v1_queue_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_queue_v1_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_queue_v1_queue_proto_goTypes = []any{
	(ShardType)(0),                               // 0: queue.v1.ShardType
	(*HealthCheckRequest)(nil),                   // 1: queue.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),                  // 2: queue.v1.HealthCheckResponse
	(*AckMessageRequest)(nil),                    // 3: queue.v1.AckMessageRequest
	(*AckMessageResponse)(nil),                   // 4: queue.v1.AckMessageResponse
	(*SendMessageRequest)(nil),                   // 5: queue.v1.SendMessageRequest
	(*SendMessageResponse)(nil),                  // 6: queue.v1.SendMessageResponse
	(*ReceiveMessageRequest)(nil),                // 7: queue.v1.ReceiveMessageRequest
	(*ReceiveMessageForPartitionIDResponse)(nil), // 8: queue.v1.ReceiveMessageForPartitionIDResponse
	(*ReceiveMessageForPartitionIDRequest)(nil),  // 9: queue.v1.ReceiveMessageForPartitionIDRequest
	(*CreateTopicRequest)(nil),                   // 10: queue.v1.CreateTopicRequest
	(*CreateTopicResponse)(nil),                  // 11: queue.v1.CreateTopicResponse
	(*ConnectRequest)(nil),                       // 12: queue.v1.ConnectRequest
	(*ConnectResponse)(nil),                      // 13: queue.v1.ConnectResponse
	(*Consumer)(nil),                             // 14: queue.v1.Consumer
	(*ConsumerGroup)(nil),                        // 15: queue.v1.ConsumerGroup
	(*ShardInfoRequest)(nil),                     // 16: queue.v1.ShardInfoRequest
	(*ShardInfoResponse)(nil),                    // 17: queue.v1.ShardInfoResponse
	(*ShardInfo)(nil),                            // 18: queue.v1.ShardInfo
	(*Broker)(nil),                               // 19: queue.v1.Broker
	nil,                                          // 20: queue.v1.ShardInfoResponse.ShardInfoEntry
	(*timestamppb.Timestamp)(nil),                // 21: google.protobuf.Timestamp
}
var file_queue_v1_queue_proto_depIdxs = []int32{
	21, // 0: queue.v1.HealthCheckRequest.ping_at:type_name -> google.protobuf.Timestamp
	14, // 1: queue.v1.ConnectResponse.consumer:type_name -> queue.v1.Consumer
	15, // 2: queue.v1.ConnectResponse.consumer_group:type_name -> queue.v1.ConsumerGroup
	20, // 3: queue.v1.ShardInfoResponse.shard_info:type_name -> queue.v1.ShardInfoResponse.ShardInfoEntry
	19, // 4: queue.v1.ShardInfoResponse.brokers:type_name -> queue.v1.Broker
	0,  // 5: queue.v1.ShardInfo.shard_type:type_name -> queue.v1.ShardType
	19, // 6: queue.v1.ShardInfo.brokers:type_name -> queue.v1.Broker
	18, // 7: queue.v1.ShardInfoResponse.ShardInfoEntry.value:type_name -> queue.v1.ShardInfo
	1,  // 8: queue.v1.QueueService.HealthCheck:input_type -> queue.v1.HealthCheckRequest
	3,  // 9: queue.v1.QueueService.AckMessage:input_type -> queue.v1.AckMessageRequest
	5,  // 10: queue.v1.QueueService.SendMessage:input_type -> queue.v1.SendMessageRequest
	9,  // 11: queue.v1.QueueService.ReceiveMessageForPartitionID:input_type -> queue.v1.ReceiveMessageForPartitionIDRequest
	10, // 12: queue.v1.QueueService.CreateTopic:input_type -> queue.v1.CreateTopicRequest
	12, // 13: queue.v1.QueueService.Connect:input_type -> queue.v1.ConnectRequest
	16, // 14: queue.v1.QueueService.ShardInfo:input_type -> queue.v1.ShardInfoRequest
	2,  // 15: queue.v1.QueueService.HealthCheck:output_type -> queue.v1.HealthCheckResponse
	4,  // 16: queue.v1.QueueService.AckMessage:output_type -> queue.v1.AckMessageResponse
	6,  // 17: queue.v1.QueueService.SendMessage:output_type -> queue.v1.SendMessageResponse
	8,  // 18: queue.v1.QueueService.ReceiveMessageForPartitionID:output_type -> queue.v1.ReceiveMessageForPartitionIDResponse
	11, // 19: queue.v1.QueueService.CreateTopic:output_type -> queue.v1.CreateTopicResponse
	13, // 20: queue.v1.QueueService.Connect:output_type -> queue.v1.ConnectResponse
	17, // 21: queue.v1.QueueService.ShardInfo:output_type -> queue.v1.ShardInfoResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_queue_v1_queue_proto_init() }
func file_queue_v1_queue_proto_init() {
	if File_queue_v1_queue_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_queue_v1_queue_proto_rawDesc), len(file_queue_v1_queue_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_queue_v1_queue_proto_goTypes,
		DependencyIndexes: file_queue_v1_queue_proto_depIdxs,
		EnumInfos:         file_queue_v1_queue_proto_enumTypes,
		MessageInfos:      file_queue_v1_queue_proto_msgTypes,
	}.Build()
	File_queue_v1_queue_proto = out.File
	file_queue_v1_queue_proto_goTypes = nil
	file_queue_v1_queue_proto_depIdxs = nil
}
