// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: raft/fsm/message/v1/update.proto

package messagev1

import (
	v1 "github.com/sreekar2307/queue/gen/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppendInputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *v1.Message            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendInputs) Reset() {
	*x = AppendInputs{}
	mi := &file_raft_fsm_message_v1_update_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendInputs) ProtoMessage() {}

func (x *AppendInputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_message_v1_update_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendInputs.ProtoReflect.Descriptor instead.
func (*AppendInputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_message_v1_update_proto_rawDescGZIP(), []int{0}
}

func (x *AppendInputs) GetMessage() *v1.Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type AppendOutputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *v1.Message            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendOutputs) Reset() {
	*x = AppendOutputs{}
	mi := &file_raft_fsm_message_v1_update_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendOutputs) ProtoMessage() {}

func (x *AppendOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_message_v1_update_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendOutputs.ProtoReflect.Descriptor instead.
func (*AppendOutputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_message_v1_update_proto_rawDescGZIP(), []int{1}
}

func (x *AppendOutputs) GetMessage() *v1.Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type AckInputs struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ConsumerGroupId string                 `protobuf:"bytes,1,opt,name=consumer_group_id,json=consumerGroupId,proto3" json:"consumer_group_id,omitempty"`
	Message         *v1.Message            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AckInputs) Reset() {
	*x = AckInputs{}
	mi := &file_raft_fsm_message_v1_update_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckInputs) ProtoMessage() {}

func (x *AckInputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_message_v1_update_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckInputs.ProtoReflect.Descriptor instead.
func (*AckInputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_message_v1_update_proto_rawDescGZIP(), []int{2}
}

func (x *AckInputs) GetConsumerGroupId() string {
	if x != nil {
		return x.ConsumerGroupId
	}
	return ""
}

func (x *AckInputs) GetMessage() *v1.Message {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_raft_fsm_message_v1_update_proto protoreflect.FileDescriptor

const file_raft_fsm_message_v1_update_proto_rawDesc = "" +
	"\n" +
	" raft/fsm/message/v1/update.proto\x12\x13raft.fsm.message.v1\x1a\x14types/v1/types.proto\";\n" +
	"\fAppendInputs\x12+\n" +
	"\amessage\x18\x01 \x01(\v2\x11.types.v1.MessageR\amessage\"<\n" +
	"\rAppendOutputs\x12+\n" +
	"\amessage\x18\x01 \x01(\v2\x11.types.v1.MessageR\amessage\"d\n" +
	"\tAckInputs\x12*\n" +
	"\x11consumer_group_id\x18\x01 \x01(\tR\x0fconsumerGroupId\x12+\n" +
	"\amessage\x18\x02 \x01(\v2\x11.types.v1.MessageR\amessageB\xd5\x01\n" +
	"\x17com.raft.fsm.message.v1B\vUpdateProtoP\x01Z>github.com/sreekar2307/queue/gen/raft/fsm/message/v1;messagev1\xa2\x02\x03RFM\xaa\x02\x13Raft.Fsm.Message.V1\xca\x02\x13Raft\\Fsm\\Message\\V1\xe2\x02\x1fRaft\\Fsm\\Message\\V1\\GPBMetadata\xea\x02\x16Raft::Fsm::Message::V1b\x06proto3"

var (
	file_raft_fsm_message_v1_update_proto_rawDescOnce sync.Once
	file_raft_fsm_message_v1_update_proto_rawDescData []byte
)

func file_raft_fsm_message_v1_update_proto_rawDescGZIP() []byte {
	file_raft_fsm_message_v1_update_proto_rawDescOnce.Do(func() {
		file_raft_fsm_message_v1_update_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_raft_fsm_message_v1_update_proto_rawDesc), len(file_raft_fsm_message_v1_update_proto_rawDesc)))
	})
	return file_raft_fsm_message_v1_update_proto_rawDescData
}

var file_raft_fsm_message_v1_update_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_raft_fsm_message_v1_update_proto_goTypes = []any{
	(*AppendInputs)(nil),  // 0: raft.fsm.message.v1.AppendInputs
	(*AppendOutputs)(nil), // 1: raft.fsm.message.v1.AppendOutputs
	(*AckInputs)(nil),     // 2: raft.fsm.message.v1.AckInputs
	(*v1.Message)(nil),    // 3: types.v1.Message
}
var file_raft_fsm_message_v1_update_proto_depIdxs = []int32{
	3, // 0: raft.fsm.message.v1.AppendInputs.message:type_name -> types.v1.Message
	3, // 1: raft.fsm.message.v1.AppendOutputs.message:type_name -> types.v1.Message
	3, // 2: raft.fsm.message.v1.AckInputs.message:type_name -> types.v1.Message
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_raft_fsm_message_v1_update_proto_init() }
func file_raft_fsm_message_v1_update_proto_init() {
	if File_raft_fsm_message_v1_update_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_raft_fsm_message_v1_update_proto_rawDesc), len(file_raft_fsm_message_v1_update_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_raft_fsm_message_v1_update_proto_goTypes,
		DependencyIndexes: file_raft_fsm_message_v1_update_proto_depIdxs,
		MessageInfos:      file_raft_fsm_message_v1_update_proto_msgTypes,
	}.Build()
	File_raft_fsm_message_v1_update_proto = out.File
	file_raft_fsm_message_v1_update_proto_goTypes = nil
	file_raft_fsm_message_v1_update_proto_depIdxs = nil
}
