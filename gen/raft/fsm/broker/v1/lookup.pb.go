// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: raft/fsm/broker/v1/lookup.proto

package brokerv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/sreekar2307/queue/gen/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PartitionsForTopicInputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Topic         string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionsForTopicInputs) Reset() {
	*x = PartitionsForTopicInputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionsForTopicInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionsForTopicInputs) ProtoMessage() {}

func (x *PartitionsForTopicInputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionsForTopicInputs.ProtoReflect.Descriptor instead.
func (*PartitionsForTopicInputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{0}
}

func (x *PartitionsForTopicInputs) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type PartitionsForTopicOutputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Partitions    []*v1.Partition        `protobuf:"bytes,1,rep,name=partitions,proto3" json:"partitions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionsForTopicOutputs) Reset() {
	*x = PartitionsForTopicOutputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionsForTopicOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionsForTopicOutputs) ProtoMessage() {}

func (x *PartitionsForTopicOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionsForTopicOutputs.ProtoReflect.Descriptor instead.
func (*PartitionsForTopicOutputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{1}
}

func (x *PartitionsForTopicOutputs) GetPartitions() []*v1.Partition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type PartitionIDForMessageInputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *v1.Message            `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionIDForMessageInputs) Reset() {
	*x = PartitionIDForMessageInputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionIDForMessageInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionIDForMessageInputs) ProtoMessage() {}

func (x *PartitionIDForMessageInputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionIDForMessageInputs.ProtoReflect.Descriptor instead.
func (*PartitionIDForMessageInputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{2}
}

func (x *PartitionIDForMessageInputs) GetMessage() *v1.Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type PartitionIDForMessageOutputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartitionId   string                 `protobuf:"bytes,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartitionIDForMessageOutputs) Reset() {
	*x = PartitionIDForMessageOutputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartitionIDForMessageOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartitionIDForMessageOutputs) ProtoMessage() {}

func (x *PartitionIDForMessageOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartitionIDForMessageOutputs.ProtoReflect.Descriptor instead.
func (*PartitionIDForMessageOutputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{3}
}

func (x *PartitionIDForMessageOutputs) GetPartitionId() string {
	if x != nil {
		return x.PartitionId
	}
	return ""
}

type AllPartitionsOutputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Partitions    []*v1.Partition        `protobuf:"bytes,1,rep,name=partitions,proto3" json:"partitions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllPartitionsOutputs) Reset() {
	*x = AllPartitionsOutputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllPartitionsOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllPartitionsOutputs) ProtoMessage() {}

func (x *AllPartitionsOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllPartitionsOutputs.ProtoReflect.Descriptor instead.
func (*AllPartitionsOutputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{4}
}

func (x *AllPartitionsOutputs) GetPartitions() []*v1.Partition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type ConsumerForIDInputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerForIDInputs) Reset() {
	*x = ConsumerForIDInputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerForIDInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerForIDInputs) ProtoMessage() {}

func (x *ConsumerForIDInputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerForIDInputs.ProtoReflect.Descriptor instead.
func (*ConsumerForIDInputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{5}
}

func (x *ConsumerForIDInputs) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

type ConsumerForIDOutputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consumer      *v1.Consumer           `protobuf:"bytes,1,opt,name=consumer,proto3" json:"consumer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerForIDOutputs) Reset() {
	*x = ConsumerForIDOutputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerForIDOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerForIDOutputs) ProtoMessage() {}

func (x *ConsumerForIDOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerForIDOutputs.ProtoReflect.Descriptor instead.
func (*ConsumerForIDOutputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{6}
}

func (x *ConsumerForIDOutputs) GetConsumer() *v1.Consumer {
	if x != nil {
		return x.Consumer
	}
	return nil
}

type ConsumersOutputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Consumers     []*v1.Consumer         `protobuf:"bytes,1,rep,name=consumers,proto3" json:"consumers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumersOutputs) Reset() {
	*x = ConsumersOutputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumersOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumersOutputs) ProtoMessage() {}

func (x *ConsumersOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumersOutputs.ProtoReflect.Descriptor instead.
func (*ConsumersOutputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{7}
}

func (x *ConsumersOutputs) GetConsumers() []*v1.Consumer {
	if x != nil {
		return x.Consumers
	}
	return nil
}

type ShardInfoForPartitionsInputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Partitions    []*v1.Partition        `protobuf:"bytes,1,rep,name=partitions,proto3" json:"partitions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardInfoForPartitionsInputs) Reset() {
	*x = ShardInfoForPartitionsInputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardInfoForPartitionsInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfoForPartitionsInputs) ProtoMessage() {}

func (x *ShardInfoForPartitionsInputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfoForPartitionsInputs.ProtoReflect.Descriptor instead.
func (*ShardInfoForPartitionsInputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{8}
}

func (x *ShardInfoForPartitionsInputs) GetPartitions() []*v1.Partition {
	if x != nil {
		return x.Partitions
	}
	return nil
}

type ShardInfoForPartitionsOutputs struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	ShardInfo     map[string]*v1.ShardInfo `protobuf:"bytes,1,rep,name=shard_info,json=shardInfo,proto3" json:"shard_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Brokers       []*v1.Broker             `protobuf:"bytes,2,rep,name=brokers,proto3" json:"brokers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardInfoForPartitionsOutputs) Reset() {
	*x = ShardInfoForPartitionsOutputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardInfoForPartitionsOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardInfoForPartitionsOutputs) ProtoMessage() {}

func (x *ShardInfoForPartitionsOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardInfoForPartitionsOutputs.ProtoReflect.Descriptor instead.
func (*ShardInfoForPartitionsOutputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{9}
}

func (x *ShardInfoForPartitionsOutputs) GetShardInfo() map[string]*v1.ShardInfo {
	if x != nil {
		return x.ShardInfo
	}
	return nil
}

func (x *ShardInfoForPartitionsOutputs) GetBrokers() []*v1.Broker {
	if x != nil {
		return x.Brokers
	}
	return nil
}

type BrokerForIDInputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrokerId      uint64                 `protobuf:"varint,1,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BrokerForIDInputs) Reset() {
	*x = BrokerForIDInputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BrokerForIDInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerForIDInputs) ProtoMessage() {}

func (x *BrokerForIDInputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerForIDInputs.ProtoReflect.Descriptor instead.
func (*BrokerForIDInputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{10}
}

func (x *BrokerForIDInputs) GetBrokerId() uint64 {
	if x != nil {
		return x.BrokerId
	}
	return 0
}

type BrokerForIDOutputs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Broker        *v1.Broker             `protobuf:"bytes,1,opt,name=broker,proto3" json:"broker,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BrokerForIDOutputs) Reset() {
	*x = BrokerForIDOutputs{}
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BrokerForIDOutputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerForIDOutputs) ProtoMessage() {}

func (x *BrokerForIDOutputs) ProtoReflect() protoreflect.Message {
	mi := &file_raft_fsm_broker_v1_lookup_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerForIDOutputs.ProtoReflect.Descriptor instead.
func (*BrokerForIDOutputs) Descriptor() ([]byte, []int) {
	return file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP(), []int{11}
}

func (x *BrokerForIDOutputs) GetBroker() *v1.Broker {
	if x != nil {
		return x.Broker
	}
	return nil
}

var File_raft_fsm_broker_v1_lookup_proto protoreflect.FileDescriptor

const file_raft_fsm_broker_v1_lookup_proto_rawDesc = "" +
	"\n" +
	"\x1fraft/fsm/broker/v1/lookup.proto\x12\x12raft.fsm.broker.v1\x1a\x1bbuf/validate/validate.proto\x1a\x14types/v1/types.proto\";\n" +
	"\x18PartitionsForTopicInputs\x12\x1f\n" +
	"\x05topic\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\x05topic\"P\n" +
	"\x19PartitionsForTopicOutputs\x123\n" +
	"\n" +
	"partitions\x18\x01 \x03(\v2\x13.types.v1.PartitionR\n" +
	"partitions\"J\n" +
	"\x1bPartitionIDForMessageInputs\x12+\n" +
	"\amessage\x18\x01 \x01(\v2\x11.types.v1.MessageR\amessage\"A\n" +
	"\x1cPartitionIDForMessageOutputs\x12!\n" +
	"\fpartition_id\x18\x01 \x01(\tR\vpartitionId\"K\n" +
	"\x14AllPartitionsOutputs\x123\n" +
	"\n" +
	"partitions\x18\x01 \x03(\v2\x13.types.v1.PartitionR\n" +
	"partitions\"A\n" +
	"\x13ConsumerForIDInputs\x12*\n" +
	"\vconsumer_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x182R\n" +
	"consumerId\"F\n" +
	"\x14ConsumerForIDOutputs\x12.\n" +
	"\bconsumer\x18\x01 \x01(\v2\x12.types.v1.ConsumerR\bconsumer\"D\n" +
	"\x10ConsumersOutputs\x120\n" +
	"\tconsumers\x18\x01 \x03(\v2\x12.types.v1.ConsumerR\tconsumers\"S\n" +
	"\x1cShardInfoForPartitionsInputs\x123\n" +
	"\n" +
	"partitions\x18\x01 \x03(\v2\x13.types.v1.PartitionR\n" +
	"partitions\"\xff\x01\n" +
	"\x1dShardInfoForPartitionsOutputs\x12_\n" +
	"\n" +
	"shard_info\x18\x01 \x03(\v2@.raft.fsm.broker.v1.ShardInfoForPartitionsOutputs.ShardInfoEntryR\tshardInfo\x12*\n" +
	"\abrokers\x18\x02 \x03(\v2\x10.types.v1.BrokerR\abrokers\x1aQ\n" +
	"\x0eShardInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.types.v1.ShardInfoR\x05value:\x028\x01\"0\n" +
	"\x11BrokerForIDInputs\x12\x1b\n" +
	"\tbroker_id\x18\x01 \x01(\x04R\bbrokerId\">\n" +
	"\x12BrokerForIDOutputs\x12(\n" +
	"\x06broker\x18\x01 \x01(\v2\x10.types.v1.BrokerR\x06brokerB\xce\x01\n" +
	"\x16com.raft.fsm.broker.v1B\vLookupProtoP\x01Z<github.com/sreekar2307/queue/gen/raft/fsm/broker/v1;brokerv1\xa2\x02\x03RFB\xaa\x02\x12Raft.Fsm.Broker.V1\xca\x02\x12Raft\\Fsm\\Broker\\V1\xe2\x02\x1eRaft\\Fsm\\Broker\\V1\\GPBMetadata\xea\x02\x15Raft::Fsm::Broker::V1b\x06proto3"

var (
	file_raft_fsm_broker_v1_lookup_proto_rawDescOnce sync.Once
	file_raft_fsm_broker_v1_lookup_proto_rawDescData []byte
)

func file_raft_fsm_broker_v1_lookup_proto_rawDescGZIP() []byte {
	file_raft_fsm_broker_v1_lookup_proto_rawDescOnce.Do(func() {
		file_raft_fsm_broker_v1_lookup_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_raft_fsm_broker_v1_lookup_proto_rawDesc), len(file_raft_fsm_broker_v1_lookup_proto_rawDesc)))
	})
	return file_raft_fsm_broker_v1_lookup_proto_rawDescData
}

var file_raft_fsm_broker_v1_lookup_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_raft_fsm_broker_v1_lookup_proto_goTypes = []any{
	(*PartitionsForTopicInputs)(nil),      // 0: raft.fsm.broker.v1.PartitionsForTopicInputs
	(*PartitionsForTopicOutputs)(nil),     // 1: raft.fsm.broker.v1.PartitionsForTopicOutputs
	(*PartitionIDForMessageInputs)(nil),   // 2: raft.fsm.broker.v1.PartitionIDForMessageInputs
	(*PartitionIDForMessageOutputs)(nil),  // 3: raft.fsm.broker.v1.PartitionIDForMessageOutputs
	(*AllPartitionsOutputs)(nil),          // 4: raft.fsm.broker.v1.AllPartitionsOutputs
	(*ConsumerForIDInputs)(nil),           // 5: raft.fsm.broker.v1.ConsumerForIDInputs
	(*ConsumerForIDOutputs)(nil),          // 6: raft.fsm.broker.v1.ConsumerForIDOutputs
	(*ConsumersOutputs)(nil),              // 7: raft.fsm.broker.v1.ConsumersOutputs
	(*ShardInfoForPartitionsInputs)(nil),  // 8: raft.fsm.broker.v1.ShardInfoForPartitionsInputs
	(*ShardInfoForPartitionsOutputs)(nil), // 9: raft.fsm.broker.v1.ShardInfoForPartitionsOutputs
	(*BrokerForIDInputs)(nil),             // 10: raft.fsm.broker.v1.BrokerForIDInputs
	(*BrokerForIDOutputs)(nil),            // 11: raft.fsm.broker.v1.BrokerForIDOutputs
	nil,                                   // 12: raft.fsm.broker.v1.ShardInfoForPartitionsOutputs.ShardInfoEntry
	(*v1.Partition)(nil),                  // 13: types.v1.Partition
	(*v1.Message)(nil),                    // 14: types.v1.Message
	(*v1.Consumer)(nil),                   // 15: types.v1.Consumer
	(*v1.Broker)(nil),                     // 16: types.v1.Broker
	(*v1.ShardInfo)(nil),                  // 17: types.v1.ShardInfo
}
var file_raft_fsm_broker_v1_lookup_proto_depIdxs = []int32{
	13, // 0: raft.fsm.broker.v1.PartitionsForTopicOutputs.partitions:type_name -> types.v1.Partition
	14, // 1: raft.fsm.broker.v1.PartitionIDForMessageInputs.message:type_name -> types.v1.Message
	13, // 2: raft.fsm.broker.v1.AllPartitionsOutputs.partitions:type_name -> types.v1.Partition
	15, // 3: raft.fsm.broker.v1.ConsumerForIDOutputs.consumer:type_name -> types.v1.Consumer
	15, // 4: raft.fsm.broker.v1.ConsumersOutputs.consumers:type_name -> types.v1.Consumer
	13, // 5: raft.fsm.broker.v1.ShardInfoForPartitionsInputs.partitions:type_name -> types.v1.Partition
	12, // 6: raft.fsm.broker.v1.ShardInfoForPartitionsOutputs.shard_info:type_name -> raft.fsm.broker.v1.ShardInfoForPartitionsOutputs.ShardInfoEntry
	16, // 7: raft.fsm.broker.v1.ShardInfoForPartitionsOutputs.brokers:type_name -> types.v1.Broker
	16, // 8: raft.fsm.broker.v1.BrokerForIDOutputs.broker:type_name -> types.v1.Broker
	17, // 9: raft.fsm.broker.v1.ShardInfoForPartitionsOutputs.ShardInfoEntry.value:type_name -> types.v1.ShardInfo
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_raft_fsm_broker_v1_lookup_proto_init() }
func file_raft_fsm_broker_v1_lookup_proto_init() {
	if File_raft_fsm_broker_v1_lookup_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_raft_fsm_broker_v1_lookup_proto_rawDesc), len(file_raft_fsm_broker_v1_lookup_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_raft_fsm_broker_v1_lookup_proto_goTypes,
		DependencyIndexes: file_raft_fsm_broker_v1_lookup_proto_depIdxs,
		MessageInfos:      file_raft_fsm_broker_v1_lookup_proto_msgTypes,
	}.Build()
	File_raft_fsm_broker_v1_lookup_proto = out.File
	file_raft_fsm_broker_v1_lookup_proto_goTypes = nil
	file_raft_fsm_broker_v1_lookup_proto_depIdxs = nil
}
